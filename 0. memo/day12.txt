프로그램
	실행이 안된 상태.

프로세스
	실행중인 프로그램

쓰레드
	프로세스 내의 작업 처리 경로
	
	- 단일 쓰레드
		처리 경로를 한 개만 가지고 있기 때문에 직렬적이다.
		한 번에 하나씩 처리하기 때문에 상대적으로 비효율적이다.
		하지만 하나의 작업에 문제가 발생하더라도 다른 작업은 시작하지 않았기 때문에
		다른 작업에는 문제가 발생하지 않는다. 따라서 안전성이 보장된다.
		또한 멀티 쓰레드에 비해 설계가 쉽다.


	- 멀티 쓰레드
		하나의 프로세스를 동시에 처리하는 것처럼 보이지만 
		사실은 매우 짧은 단위로 분할해서 차례로 처리한다.
		여러 개의 처리 경로를 가질 수 있도록 하며, 동시 작업이 가능해진다.
		하나의 쓰레드 문제 발생 시 모든 쓰레드에 문제가 발생하게 된다.
		멀티 쓰레드로 설계한다면, 처리량 증가, 효율성 증가, 처리비용 감소의 장점이 있기 떄문에
		단점을 감수하고 설계하는 편이다.
-----------------------------------------------------------------------------------------------------------------------------------
멀티 쓰레드 구현 방법
	핵심: run() 메소드 재정의

	1. Thread 클래스 상속
	2. Runnable 인터페이스 지정
-----------------------------------------------------------------------------------------------------------------------------------
동기화(Synchronized)
	하나의 쓰레드가 자원에 접근 중일 때 다른 쓰레드가 동시에 같은 자원을 접근하지 못하게 막는 것
	즉, 자원공유 문제를 해결할 수 있고 각 쓰레드를 제어해야할 때에도 자주 사용된다.

동기화 문법
	- 블럭
		synchronized(mutex){...}
		영역 전체에 동기화가 걸린다.
	- 키워드
		synchronized
		메소드 리턴 타입 앞에 작성하면 해당 메소드 전체에 동기화가 걸린다.
-----------------------------------------------------------------------------------------------------------------------------------
[실습]
동석이네 동물원에는 3마리의 동물이 있다.
각 동물은 울음 소리가 다르고 2마리의 동물은 동시에 운다.
나머지 1마리 동물은 2마리 동물이 모두 울고 나면 마지막에 운다.

패키지명: threadTask

※ 클래스는 2개만 선언한다.
※ 반드시 join()을 사용한다.
※ 각 동물은 10번씩만 운다.
※ 람다식을 사용한다.


















