JAVA - 프로그래밍 언어
	프로그래밍 언어는 개발자와 운영체제가 소통하기 위한 언어이다.

소스코드
	명령어를 작성해 놓은 것.
	개발자와 운영체제가 소통할 것을 글로 작성해 놓은 것.
	
컴파일
	사람의 언어를 컴퓨터 언어로 바꿔주는 작업.

컴파일러
	컴파일을 해주는 프로그램 또는 명령어
	컴파일러는 위에서 아래로, 좌에서 우로 번역한다. (코드를 읽어가는 순서)

프로그램
	소스코드로 잘 짜여진 틀

콘솔
	개발자와 운영체제가 소통한 결과를 보여주는 창


▶ 일반 프로그램
	프로그램
	OS(운영체제): 하드웨어에 적절한 전기신호를 흘려주는 역할.
	하드웨어

	- 이식성이 나쁘다.

▶ JAVA 프로그램
	프로그램
	JVM: JAVA 프로그램을 OS에 맞게 번역한다.
	OS(운영체제): 하드웨어에 적절한 전기신호를 흘려주는 역할.
	하드웨어

	- 이식성이 좋다.
---------------------------------------------------------------------------------------------------

JVM(Java Virtual Machine)
	JAVA 프로그램을 실행해 줌.

JRE(Java Runtime Enviroment)
	JVM을 생성하며, 실행할 떄 필요한 라이브러리 파일들을 가지고 있다.

JDK(Java Development Kit) - 컴파일러
	JRE 외에 개발에 필요한 도구들을 가지고 있다
	컴파일 명령어와 실행 명령어를 담고 있다.

JDK 설치
   https://drive.google.com/file/d/1BouHeP6A0hjN0KDrM_eb7uE3HY0szDqN/view?usp=drive_link


IDE 설치
	- 이클립스
	https://drive.google.com/file/d/1NjHaRF_leHWTs3BhaHP5i1Ezlu0UrMYH/view?usp=drive_link
	- 인텔리제이
----------------------------------------------------------------------------------------------------
기본 구조
	프로젝트
		패키지(앞글자 소문자)
			클래스(앞글자 대문자)
				메소드(이름 뒤에 소괄호)
					소스코드

----------------------------------------------------------------------------------------------------
출력 메소드
	1. print(): 마지막에 자동으로 줄바꿈되지 않고 아래 문장과 이어서 출력된다.
	2. println(): 마지막에 자동으로 줄바꿈된다.
	3. printf(): 서식 문자를 사용하여 출력할 수 있으며, 자동으로 줄 바꿈되지 않는다.

출력 메소드를 사용하는 이유
	오류를 구체화하기 위해 개발자가 사용하는 도구이다.

	A코드
 	B코드
	C코드
	D코드

	오류 발생시 어떤 라인에서 발생했는지 알 수 없다.
	
	A코드
	System.out.println("A")
 	B코드
	System.out.println("B")
	C코드
	System.out.println("C")
	D코드
	System.out.println("D")
C가 콘솔에 출력되었다면, 위에서 아래로 번역되기 때문에 D코드에 문제가 발생한 것으로 판단된다.

----------------------------------------------------------------------------------------------------------------
변수
	변수는 저장공간이다.

	x	 	= 	10
	저장공간의 	대입	값(상수)
	이름		연산자


자료형(type)
	자료형은 저장공간의 종류이다.
	
	자료형		type		byte(8bit)		값
	
	정수형		byte		1		4, 1, -120, 100, ... 
			short		2		9,150, -55, ...
			int(기본형)	4		123, -1556, -2147385946, ...
			long		8		2200000000L,-3200000000L, ...
	실수형		float		4		3.12F, 2.59F, -12.313F, ...//기본형이 double이라서 float를 사용한다고 마지막에 F를 붙임
			double(기본형)	8		3.12, 2.59, -12.313, ...
	문자형		char		2		'A', 'B', '한', '.', ...
	문자열		String		???		"ABC", "0.0", "안녕", .... 

변수의 선언
	자료형 변수형 = 초기값:  ◀초기화 // 선언과 동시에 값이 들어가야 초기값
	자료형 변수명;

	예)
	int x = 10;
	x라는 이름의 저장공간이 int형으로 할당(allocation)되고 그 안에 10이 들어간다.

주소
	int x = 10;
	x라는 이름의 저장공간이 int형으로 RAM에 할당되면, 고유한 값인 주소값이 부여된다.
	계속 실행되거나 종료되는 프로그램이 있기 때문에, 주소가 이동될 수 있으나 중복은 없다.
	
변수의 사용
	저장 공간의 확인 단계
	1. 자료형을 확인한다
	2. 대입연산자를 확인한다.
	
	int data = 10;	//저장공간
	data = 20;	//저장공간
	data +9;		//값
	data = data + 99;  //첫번째 저장공간,  두번째 값

ctrl + alt + 방향키  = 복사됨

변수 선언 시 주의사항
	1. 같은 이름의 변수로 선언할 수 없다.
	2. 초기화를 해준다.
	3. 되도록 선언 후에 한꺼번에 선언한다(영역 상단).

변수명 주의 사항
	1. 문자로 시작해야 한다.
	2. 특수문자를 사용할 수 없다. 단, _는 허용한다.
	3. 소문자로 시작한다.
	4. 공백을 사용할 수 없다.
		good boy
		good_boy: 언더바 표기법
		goodBoy: 카멜 표기법
	5. 되도록 한글을 사용하지 않는다.
	6. 명사로 사용한다.
	7. 뜻이 있는 단어를 사용한다.


변수를 사용하는 이유
	1. 반복되는 값을 쉽게 관리하기 위해서
	2. 의미없는 값을 하나의 정보로 만들기 위해서(자료구조)

----------------------------------------------------------------------------------------------------------------------
상수
	항상 그대로인 수.
	값을 변경할 수 없도록 한다.
	
	final 자료형 상수명 = 값;
	키워드(예약어) = 자바에서 미리 만들어 놓은 것
	상수는 대문자


상수를 사용하는 이유
	값에 의미부여를 하기 위해서

-------------------------------------------------------------------------------------------------------------------
자료 받는 방법
우클릭 - import -> import ->geneal -> existing profects into workspace 
-> select Archive file





	













